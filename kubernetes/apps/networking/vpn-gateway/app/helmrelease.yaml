apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: vpn-gateway
  namespace: networking
spec:
  interval: 10m
  chart:
    spec:
      chart: pod-gateway
      version: 5.6.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/pod-gateway
      tag: v1.7.0
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
        - SYS_ADMIN
        - sysctl net.ipv4.conf.all.src_valid_mark=1
    DNS: "1.1.1.1"
    clusterName: default
    addons:
      netshoot:
        enabled: true
      vpn:
        enabled: true
        type: wireguard
        wireguard:
          image:
            repository: ghcr.io/bubuntux/nordlynx
            tag: latest
          securityContext:
            capabilities:
              add: ["NET_ADMIN", "NET_RAW", "SYS_ADMIN", "sysctl net.ipv4.conf.all.src_valid_mark=1"]
              # - sysctl net.ipv4.conf.all.src_valid_mark=1
        # env:
        #   IPTABLES_BACKEND: nft
        #   KILLSWITCH: "false"
        envFrom:
        - secretRef:
            name: nordvpn-config
        # configFile: |-
        #   [Interface]
        #   PrivateKey = ${VPN_INTERFACE_PRIVATE_KEY}
        #   Address = ${VPN_INTERFACE_ADDRESS}
        #   DNS = "1.1.1.1"

        #   [Peer]
        #   PublicKey = ${VPN_PEER_PUBLIC_KEY}
        #   AllowedIPs = 0.0.0.0/0
        #   Endpoint = ${VPN_PEER_ENDPOINT}
        #   PersistentKeepalive = 25
        # additionalVolumes:
        # - name: data
        #   persistentVolumeClaim:
        #     claimName: pod-gateway-data
        # additionalVolumeMounts:
        # - name: data
        #   mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            memory: 512Mi
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - if [ $(curl -s https://ipinfo.io/country) = "${VPN_COUNTRY}" ]; then exit 0; else exit $?; fi
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 1
        networkPolicy:
          enabled: true
          egress:
          - to:
            - ipBlock:
                cidr: 0.0.0.0/0
            ports:
            - port: ${VPN_PORT}
              protocol: UDP
          - to:
            - ipBlock:
                cidr: ${K8S_CLUSTER_CIDR}
            - ipBlock:
                cidr: ${K8S_SERVICE_CIDR}
    routed_namespaces:
    - default
    settings:
      VPN_INTERFACE: wg0
      VPN_BLOCK_OTHER_TRAFFIC: true
      VPN_TRAFFIC_PORT: ${VPN_PORT}
      NOT_ROUTED_TO_GATEWAY_CIDRS: ${K8S_CLUSTER_CIDR} ${K8S_SERVICE_CIDR} ${SERVER_CIDR}
      VPN_LOCAL_CIDRS: ${K8S_CLUSTER_CIDR} ${K8S_SERVICE_CIDR} ${SERVER_CIDR}
    publicPorts:
    - hostname: radarr
      IP: 10 # must be an integer between 2 and VXLAN_GATEWAY_FIRST_DYNAMIC_IP (20 by default)
      ports:
      - type: tcp
        port: 27071
      - type: udp
        port: 27071
    webhook:
      image:
        repository: ghcr.io/k8s-at-home/gateway-admision-controller
        tag: v3.6.0
      gatewayDefault: false
      gatewayLabel: setGateway
      gatewayAnnotation: setGateway
      namespaceSelector:
        label: vpn-routed-gateway
    # persistence:
    #   data:
    #     enabled: true
    #     existingClaim: data-pvc
    #     subPath: vpn
