# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app flood
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: jesec/flood
              tag: master@sha256:1df5b049fac3811f356d1f4ff98ee9b63ee43342aa1e24c937ae00e7d38175fb
            env:
              FLOOD_OPTION_RUNDIR: /data
              FLOOD_OPTION_AUTH: "none"
              FLOOD_OPTION_QBURL: "http://qbittorrent.default.svc.cluster.local.:80"
              FLOOD_OPTION_QBUSER: test
              FLOOD_OPTION_QBPASS: test
            resources:
              requests:
                memory: 250Mi
                cpu: 15m
              limits:
                memory: 512Mi
                # statefulset:
                #   volumeClaimTemplates:
                #   - name: config
                #     accessMode: ReadWriteOnce
                #     size: 50Gi
                #     storageClass: rook-ceph-block
                #     globalMounts:
                #     - path: /data
    service:
      main:
        ports:
          http:
            port: 3000
    persistence:
      config:
        enabled: true
        existingClaim: data-pvc
        advancedMounts:
          main:
            main:
            - path: /data
              subPath: flood
              readOnly: false
    ingress:
      main:
        enabled: true
        primary: true
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
          external-dns.home.arpa/enabled: "true"
          external-dns.alpha.kubernetes.io/target: "${METALLB_INGRESS_ADDR}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          hajimari.io/enable: "true"
        hosts:
        - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
        tls:
        - hosts:
          - *host
          secretName: *host
