apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn
spec:
  interval: 30m
  chart:
    spec:
      chart: longhorn
      version: 1.5.3
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    monitoring:
      enabled: false
      createPrometheusRules: true
    defaultSettings:
      # backupTarget: s3://longhorn@ca-west-1/
      # backupTargetCredentialSecret: longhorn-secret
      backupTarget: nfs://192.168.2.51:/mnt/md0/appdata/longhorn_backup
      defaultReplicaCount: 2
      backupstorePollInterval: 0
      createDefaultDiskLabeledNodes: true
      restoreVolumeRecurringJobs: true
      storageOverProvisioningPercentage: 100
      storageMinimalAvailablePercentage: 1
      guaranteedEngineManagerCPU: 20
      guaranteedReplicaManagerCPU: 20
      orphanAutoDeletion: true
      concurrentAutomaticEngineUpgradePerNodeLimit: 3
      defaultLonghornStaticStorageClass: longhorn
      nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod

    longhornManager:
      nodeSelector:
      - hostname: "slave1"
      - hostname: "slave2"
      - hostname: "slave3"
      - hostname: "slave4"
    longhornDriver:
      nodeSelector:
      - hostname: "slave1"
      - hostname: "slave2"
      - hostname: "slave3"
      - hostname: "slave4"
    longhornUI:
      nodeSelector:
      - hostname: "slave1"
      - hostname: "slave2"
      - hostname: "slave3"
      - hostname: "slave4"
      replicas: 1
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: "192.168.2.174"
        external-dns.home.arpa/enabled: "true"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      ingressClassName: "traefik"
      tls: true
      host: "longhorn.ninjawombat.space"



# apiVersion: helm.toolkit.fluxcd.io/v2beta1
# kind: HelmRelease
# metadata:
#   name: longhorn
#   namespace: longhorn
# spec:
#   interval: 5m
#   chart:
#     spec:
#       # renovate: registryUrl=https://charts.longhorn.io
#       chart: longhorn
#       version: 1.4.0
#       sourceRef:
#         kind: HelmRepository
#         name: longhorn
#         namespace: flux-system
#       interval: 5m

#   install:
#     createNamespace: false
#     remediation:
#       retries: 5

#   upgrade:
#     crds: CreateReplace
#     remediation:
#       retries: 5

#   values:
#     persistence:
#       defaultClassReplicaCount: 2
#     defaultSettings:
#       defaultReplicaCount: 2
#       backupTarget: nfs://192.168.2.51:/mnt/md0/appdata/longhorn_backup
#       deletingConfirmationFlag: true
#     pspEnable: false
#     ingress:
#       enabled: true
#       annotations:
#         cert-manager.io/cluster-issuer: letsencrypt-production
#         external-dns.alpha.kubernetes.io/target: "192.168.2.174"
#         external-dns.home.arpa/enabled: "true"
#         external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
#         traefik.ingress.kubernetes.io/router.entrypoints: websecure
#       ingressClassName: "traefik"
#       tls: true
#       host: "longhorn.ninjawombat.space"

#     longhornManager:
#       nodeSelector:
#       - hostname: "slave1"
#       - hostname: "slave2"
#       - hostname: "slave3"
#       - hostname: "slave4"
#     longhornDriver:
#       nodeSelector:
#       - hostname: "slave1"
#       - hostname: "slave2"
#       - hostname: "slave3"
#       - hostname: "slave4"
#     longhornUI:
#       nodeSelector:
#       - hostname: "slave1"
#       - hostname: "slave2"
#       - hostname: "slave3"
#       - hostname: "slave4"
#       replicas: 1
#     longhornConversionWebhook:
#       replicas: 2
#     longhornAdmissionWebhook:
#       replicas: 2
#     longhornRecoveryBackend:
#       replicas: 1
#     csi:
#       attacherReplicaCount: 2
#       provisionerReplicaCount: 2
#       resizerReplicaCount: 2
#       snapshotterReplicaCount: 2
